customElements.define("my-calculator",class extends HTMLElement{static get observedAttributes(){return["calc-name","calc-input","width","height","margin","border-radius"]}constructor(){super();const e=this.attachShadow({mode:"open"}),t=document.createElement("template");t.innerHTML='\n          <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">\n          <style>\n              .calc-container {\n                  user-select: none;\n                  display: inline-block;\n                  -ms-overflow-style: none;\n                  /* Hide scrollbar in IE, Edge */\n                  scrollbar-width: none;\n                  /* Hide scrollbar in Firefox */\n                  width: 360px;\n                  margin: 50px;\n                  padding: 10px;\n                  border-radius: 25px;\n                  border: 15px ridge rgb(165, 165, 165);\n                  background-image: linear-gradient(0deg, rgb(0, 0, 0), rgb(0, 7, 100));\n                  box-shadow: 15px 15px 15px 0px rgba(54, 54, 54, 0.6);\n              }\n  \n              /* Hide scrollbar in Chrome and Safari */\n              ::-webkit-scrollbar {\n                  display: none;\n                  width: 0px;\n              }\n  \n              .calc-heading {\n                  margin-left: 0px;\n                  margin-right: 0px;\n                  margin-bottom: -15px;\n                  margin-top: -25px;\n                  border-radius: 15px;\n                  background-image: linear-gradient(45deg, rgba(255, 37, 237, 0.5), rgba(255, 45, 108, 0.5));\n  \n              }\n  \n              .calc-heading>p {\n                  display: flex;\n                  justify-content: center;\n                  align-items: center;\n                  text-align: center;\n                  padding: 10px;\n                  font-family: Georgia, \'Times New Roman\', Times, serif;\n                  font-size: 25px;\n                  font-weight: bold;\n                  color: rgb(214, 214, 214);\n              }\n  \n              .calc-display {\n                  color: rgb(235, 235, 235);\n                  font-family: Verdana, Geneva, Tahoma, sans-serif;\n                  height: 100px;\n                  margin: 10px 0px;\n                  padding: 1px;\n                  border-radius: 15px;\n                  background-color: rgb(75, 75, 75);\n              }\n  \n              #output {\n                  display: flex;\n                  justify-content: flex-start;\n              }\n  \n              #output > input {\n                  display: inline-block;\n                  overflow: scroll;\n                  border: none;\n                  outline: none;\n                  line-height: 55px;\n                  /* To set caret height */\n                  caret-color: rgb(0, 174, 255);\n                  margin: 0px 10px;\n                  font-size: 32px;\n                  font-family: Verdana, Geneva, Tahoma, sans-serif;\n                  background-color: rgb(75, 75, 75);\n                  color: rgb(235, 235, 235);\n              }\n  \n              #error-msg {\n                  margin: 0px 10px;\n                  overflow: scroll;\n                  color: rgb(255, 87, 21);\n                  font-size: 21px;\n              }\n  \n              .calc-keys {\n                  display: flex;\n                  flex-flow: row wrap;\n                  justify-content: space-between;\n                  align-items: flex-end;\n                  padding: 0px;\n                  margin: 10px;\n              }\n  \n              .calc-key {\n                  display: flex;\n                  justify-content: center;\n                  align-items: center;\n                  margin: 4px 4px;\n                  width: 70px;\n                  height: 55px;\n                  font-size: 25px;\n                  font-family: Verdana, Geneva, Tahoma, sans-serif;\n                  border-radius: 50%;\n              }\n  \n              .calc-key:hover {\n                  cursor: pointer;\n                  box-shadow: 4px 4px 15px rgba(173, 173, 173, 0.6);\n              }\n  \n              .calc-key:active {\n                  cursor: pointer;\n                  border-radius: 15px;\n              }\n  \n              #equal-key {\n                  color: rgb(8, 8, 8);\n                  background-color: rgb(200, 255, 252);\n              }\n  \n              #equal-key:hover {\n                  color: rgb(8, 8, 8);\n                  background-color: rgb(228, 255, 254);\n              }\n  \n              #reset-key {\n                  color: rgb(8, 8, 8);\n                  background-color: rgb(153, 226, 153);\n              }\n  \n              #reset-key:hover {\n                  color: rgb(8, 8, 8);\n                  background-color: rgb(184, 255, 184);\n              }\n  \n              #parenthesis-key {\n                  font-family:monospace;\n                  font-weight:bold;\n              }\n\n              #factorial-key {\n                font-family: Georgia, \'Times New Roman\', Times, serif;\n                font-size: 35px;\n              }\n  \n              .blue-keys {\n                  color: rgb(8, 8, 8);\n                  background-color: rgb(0, 174, 255);\n              }\n  \n              .blue-keys:hover {\n                  color: rgb(8, 8, 8);\n                  background-color: rgb(124, 213, 255);\n              }\n  \n              .orange-keys {\n                  color: rgb(8, 8, 8);\n                  background-color: rgb(196, 127, 0);\n              }\n  \n              .orange-keys:hover {\n                  color: rgb(8, 8, 8);\n                  background-color: rgb(252, 164, 0);\n              }\n  \n              .black-keys {\n                  color: rgb(235, 235, 235);\n                  background-color: rgb(61, 61, 61);\n              }\n  \n              .black-keys:hover {\n                  color: rgb(235, 235, 235);\n                  background-color: rgb(90, 90, 90);\n              }\n  \n              .black-keys:active {\n                  color: rgb(235, 235, 235);\n                  background-color: rgb(100, 100, 100);\n              }\n          </style>\n  \n          \x3c!---------------------    My Calculator Container   ---------------------\x3e\n          <div class="calc-container" tabindex="1">\n  \n              \x3c!------------------    Heading   ------------------\x3e\n              <div class="calc-heading">\n                  <p>My Calculator</p>\n              </div>\n  \n              \x3c!------------------    Display   ------------------\x3e\n              <div class="calc-display">\n                  <div id="output">\n                      <input type="text" inputmode="none" placeholder="Enter input..." tabindex="1.2">\n                  </div>\n                  <div id="error-msg"></div>\n              </div>\n  \n              \x3c!------------------    Keys   ------------------\x3e\n              <div class="calc-keys">\n                  \x3c!------------------------    Row 1   ------------------------\x3e\n                  <div id="reset-key" class="calc-key" title="All Clear (Reset)" tabindex="2">AC</div>\n                  <div class="calc-key orange-keys" id="inverse-key" title="Inverse (Reciprocal)" tabindex="3">\n                      <img id="img-inverse-key" src="./resources/images/x-inverse.png" alt="x-inverse-key" width="35" height="35">\n                  </div>\n                  <div class="calc-key orange-keys" id="squared-key" title="Squared" tabindex="4">\n                      <img id="img-squared-key" src="./resources/images/x-square.png" alt="x-squared-key" width="25" height="25">\n                  </div>\n                  <div class="calc-key orange-keys" id="sqrt-key" title="Square Root" tabindex="5">\n                    <img id="img-sqrt-key" src="./resources/images/sqrt.png" alt="sqrt-key" width="40" height="40">\n                  </div>\n  \n                  \x3c!------------------------    Row 2   ------------------------\x3e\n                  <div class="calc-key blue-keys" id="parenthesis-key" title="Parenthesis" tabindex="6">\n                      ()\n                  </div>\n                  <div class="calc-key blue-keys" id="factorial-key" title="Factorial ( a! )" tabindex="7">\n                      !\n                  </div>\n                  <div class="calc-key blue-keys" id="exponent-key" title="Exponent (x ^ y)" tabindex="8">\n                      <img id="img-exponent-key" src="./resources/images/x-power-y.png" alt="exponent-key" width="30" height="30">\n                  </div>\n                  <div class="calc-key blue-keys" style="font-size:42px;font-family:monospace" id="divide-key" title="Divide (a / b)" tabindex="9">\n                    &divide;\n                  </div>\n  \n                  \x3c!------------------------    Row 3   ------------------------\x3e\n                  <div class="calc-key black-keys" id="key-7" tabindex="22">7</div>\n                  <div class="calc-key black-keys" id="key-8" tabindex="23">8</div>\n                  <div class="calc-key black-keys" id="key-9" tabindex="24">9</div>\n                  <div class="calc-key blue-keys" id="multiply-key" title="Multiply (a x b)" tabindex="10">\n                      <i id="img-multiply-key" class="material-icons" style="font-size:32px;">close</i>\n                  </div>\n  \n                  \x3c!------------------------    Row 4   ------------------------\x3e\n                  <div class="calc-key black-keys" id="key-4" tabindex="19">4</div>\n                  <div class="calc-key black-keys" id="key-5" tabindex="20">5</div>\n                  <div class="calc-key black-keys" id="key-6" tabindex="21">6</div>\n                  <div class="calc-key blue-keys" id="subtract-key" title="Subtract (a - b)" tabindex="11">\n                      <i id="img-subtract-key" class="material-icons" style="font-size:35px;">remove</i>\n                  </div>\n  \n                  \x3c!------------------------    Row 5   ------------------------\x3e\n                  <div class="calc-key black-keys" id="key-1" tabindex="16">1</div>\n                  <div class="calc-key black-keys" id="key-2" tabindex="17">2</div>\n                  <div class="calc-key black-keys" id="key-3" tabindex="18">3</div>\n                  <div class="calc-key blue-keys" id="add-key" title="Add (a + b)" tabindex="12">\n                      <i id="img-add-key" class="material-icons" style="font-size:35px;">add</i>\n                  </div>\n  \n                  \x3c!------------------------    Row 6   ------------------------\x3e\n                  <div class="calc-key black-keys" id="decimal-point-key" title="Decimal point" tabindex="25">.</div>\n                  <div class="calc-key black-keys" id="key-0" tabindex="15">0</div>\n                  <div class="calc-key black-keys" id="backspace-key" title="Backspace" tabindex="14">\n                      <i id="img-backspace-key" class="material-icons" style="font-size: 30px;margin-right: 2px">\n                          backspace\n                      </i>\n                  </div>\n                  <div id="equal-key" class="calc-key" style="font-size:41px;font-family:monospace" title="Equals (Calculate)" tabindex="13">\n                      =\n                  </div>\n  \n              </div>\n          </div>\n          ',e.appendChild(t.content.cloneNode(!0)),this.setOnclickForAllKeys(e),this.getOutputElement(e).focus()}connectedCallback(){console.log("'MyCalculator' custom element added to DOM!")}disconnectedCallback(){console.log("'MyCalculator' custom element 'REMOVED' from DOM!")}attributeChangedCallback(e,t,n){console.log(`'${e}' attribute changed from '${t}' to '${n}' !`);const a=this.shadowRoot.querySelector(".calc-container"),i="width"===e||"height"===e||"margin"===e||"calc-name"===e||"calc-input"===e?e:"borderRadius";if("calc-name"===i&&""!==n.trim())a.querySelector(".calc-heading > p").textContent=n;else if("calc-input"===i&&/^[\d\.\+\-\x\/\^\!\(\)]+$/.test(n)){const e=a.querySelector("#output > input");e.value=n,e.focus()}else a.style[i]=n}setOnclickForAllKeys(e){const t=e.querySelector("#output > input"),n=e.querySelectorAll(".calc-keys")[0];let a,i;const r=n=>{this.resetDisplay(e),this.insertChar(t,n),t.focus()},l=()=>{this.resetDisplay(e),t.value="",t.focus()},s=()=>{this.calculateResult(e,"**-1"),t.focus()},c=()=>{this.calculateResult(e,"**2"),t.focus()},o=()=>{this.calculateResult(e,"**0.5"),t.focus()},d=()=>{a=this.getDisplayTextBeforeCaret(t);let e=0,n=0;const r=a.charAt(a.length-1);for(const t of a)e+="("===t?1:0,n+=")"===t?1:0;i=e===n?"(":"("===r||")"===r?r:/[\d\.\!]/.test(r)?")":"(",this.insertChar(t,i)},y=()=>{this.resetDisplay(e),a=this.getDisplayTextBeforeCaret(t),i=""===a||/[\^\(]$/.test(a)?"":/[\-\+\x\/\.]$/.test(a)?this.replaceOperator(t,"^"):"^",this.insertChar(t,i)},p=()=>{this.resetDisplay(e),a=this.getDisplayTextBeforeCaret(t),i=""===a||/[\(]$/.test(a)?"":/[\-\+\x\^\/\.]$/.test(a)?this.replaceOperator(t,"!"):"!",this.insertChar(t,i)},k=()=>{this.resetDisplay(e),a=this.getDisplayTextBeforeCaret(t),i=""===a||/[\/\(]$/.test(a)?"":/[\-\+\x\^]$/.test(a)?this.replaceOperator(t,"/"):"/",this.insertChar(t,i)},u=()=>{this.resetDisplay(e),a=this.getDisplayTextBeforeCaret(t),i=""===a||/[\x\(]$/.test(a)?"":/[\-\+\/\^]$/.test(a)?this.replaceOperator(t,"x"):"x",this.insertChar(t,i)},g=()=>{this.resetDisplay(e),a=this.getDisplayTextBeforeCaret(t),i=/[\-]$/.test(a)?"":/[\+\.]$/.test(a)?this.replaceOperator(t,"-"):"-",this.insertChar(t,i)},b=()=>{this.resetDisplay(e),a=this.getDisplayTextBeforeCaret(t),i=""===a||/[\+\(]$/.test(a)?"":/[\-\.\x\/\^]$/.test(a)?this.replaceOperator(t,"+"):"+",this.insertChar(t,i)},h=()=>{this.resetDisplay(e);let n=this.getCaretPosition(t),a=t.value.split("");a.splice(--n,1),t.value=a.join(""),t.setSelectionRange(n,n),t.focus()},x=()=>{this.calculateResult(e,""),this.getOutputElement(e).focus()},m=()=>{this.resetDisplay(e),a=this.getDisplayTextBeforeCaret(t),i=""===a?"0.":/[\.]|(\d+\.\d+)$/.test(a)?"":".",this.insertChar(t,i)};n.addEventListener("click",(e=>{switch(e.target.id){case"reset-key":l();break;case"inverse-key":case"img-inverse-key":s();break;case"squared-key":case"img-squared-key":c();break;case"sqrt-key":case"img-sqrt-key":o();break;case"parenthesis-key":d();break;case"exponent-key":case"img-exponent-key":y();break;case"factorial-key":p();break;case"divide-key":k();break;case"multiply-key":case"img-multiply-key":u();break;case"subtract-key":case"img-subtract-key":g();break;case"add-key":case"img-add-key":b();break;case"backspace-key":case"img-backspace-key":h();break;case"equal-key":x();break;case"decimal-point-key":m();break;case"key-0":r(0);break;case"key-1":r(1);break;case"key-2":r(2);break;case"key-3":r(3);break;case"key-4":r(4);break;case"key-5":r(5);break;case"key-6":r(6);break;case"key-7":r(7);break;case"key-8":r(8);break;case"key-9":r(9)}})),n.addEventListener("keydown",(t=>{if(t.target.className.includes("calc-key")){const n=t.target;" "===t.key&&(n.click(),setTimeout((()=>{"squared-key"===n.id&&"img-squared-key"===n.id||e.querySelector("#backspace-key").click(),n.focus()}),1))}})),t.addEventListener("focus",(e=>{const n=this.getCaretPosition(t);t.setSelectionRange(n,n)})),t.addEventListener("keydown",(n=>{const a=n.key;t.disabled=!/(\d|Backspace|Delete|Home|End|ArrowLeft|ArrowRight|Tab)/.test(a);const i="("===a||")"===a?"parenthesis-key":"!"===a?"factorial-key":"*"===a?"multiply-key":"Enter"===a||"="===a?"equal-key":"."===a?"decimal-point-key":"-"===a?"subtract-key":"+"===a?"add-key":"/"===a?"divide-key":"^"===a?"exponent-key":"Escape"===a?"reset-key":null;i&&e.querySelector(`#${i}`).click(),"Tab"!==a&&setTimeout((()=>{t.disabled=!1,t.focus()}),10)}))}insertChar(e,t){if("replaced"===t)return;if(""===t)return void e.focus();let n=this.getCaretPosition(e),a=e.value.split("");a.splice(n,0,t),e.value=a.join(""),n+=-1===n?2:1,n+="0."===t?1:0,e.setSelectionRange(n,n),e.focus()}getCaretPosition(e){if(e)return e.selectionStart||e.value.length-1}getDisplayTextBeforeCaret(e){const t=this.getCaretPosition(e);return e.value.substring(0,t)}replaceOperator(e,t){const n=this.getCaretPosition(e),a=e.value.split("");return a.splice(n-1,1,t),e.value=a.join(""),e.setSelectionRange(n,n),e.focus(),"replaced"}parseExpression(e){return e.replaceAll("x","*").replaceAll("^","**").replaceAll(".e","e").replaceAll(")(",")*(").replaceAll("0(","0*(").replaceAll("1(","1*(").replaceAll("2(","2*(").replaceAll("3(","3*(").replaceAll("4(","4*(").replaceAll("5(","5*(").replaceAll("6(","6*(").replaceAll("7(","7*(").replaceAll("8(","8*(").replaceAll("9(","9*(").replaceAll(".(","*(").replaceAll("!(","!*(").replaceAll(").",")*").replaceAll(")0",")*0").replaceAll(")1",")*1").replaceAll(")2",")*2").replaceAll(")3",")*3").replaceAll(")4",")*4").replaceAll(")5",")*5").replaceAll(")6",")*6").replaceAll(")7",")*7").replaceAll(")8",")*8").replaceAll(")9",")*9")}calculateResult(e,t){this.resetDisplay(e);let n,a=this.getOutputElement(e),i=a.value;if(""!==i){i=this.parseExpression(i),i+=t;try{if(/^!/.test(i))throw"Invalid Input";for(;/!/.test(i);)i=this.parseFactorialInput(i);if(n=Function("return "+i)(),n===1/0||n===-1/0)throw"Value too large";if(!0===n||!1===n)throw"Invalid Input";n.toString().length>14&&(n>10**14?n=n.toExponential(8):n>1?n=n.toPrecision(14):n<1&&(n=n.toExponential(8))),n=n.toString().replaceAll("e",".e"),a.value=n}catch(t){const n=this.getErrorMsgElement(e),i="string"==typeof t?t:"Invalid Input";a.style.color="rgb(255, 87, 21)",n.textContent=i}}}parseFactorialInput(e){const t=e.indexOf("!"),n=e.charAt(t+1);let a=t-1,i=e.charAt(a),r=0,l=[];if(!/[\d\)]/.test(i))throw"Invalid Input";if(")"===i){let t="",n=a,s=0,c=1;for(;"("!==i||s!==c;){if(0===n)throw"Invalid Input";t+=e.charAt(n--),i=e.charAt(n),")"===i&&c++,"("===i&&s++}return t+="(",t=t.split("").reverse().join(""),t=Function("return "+t)(),r=this.getFactorialOf(t),l=e.split(""),l.splice(n,a-n+2,r),l.join("")}let s=0,c=0;for(;/\d/.test(i);)s+=parseInt(e.charAt(a),10)*10**c++,i=e.charAt(--a);if(/[\.]/.test(i))throw"Invalid Input";return r=this.getFactorialOf(s),l=e.split(""),/[\d\.\(]/.test(n)&&(r+="*"),l.splice(a+1,c+1,r),l.join("")}getFactorialOf(e){if(0===e)return 1;if(e<=2)return e;for(let t=e-1;t>=2;--t)if((e*=t)===1/0)throw"Value too large";return e}getOutputElement(e){return e.querySelector("#output > input")}getErrorMsgElement(e){return e.querySelector("#error-msg")}resetDisplay(e){const t=this.getOutputElement(e),n=this.getErrorMsgElement(e),a=n.textContent;"Invalid Input"!==a&&"Value too large"!==a||(t.style.color="rgb(235, 235, 235)",n.textContent="")}});