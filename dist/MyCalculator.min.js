customElements.define("my-calculator",class extends HTMLElement{static get observedAttributes(){return["calc-name","calc-input","width","height","margin","border-radius"]}constructor(){super();const e=this.attachShadow({mode:"open"}),t=document.createElement("template");t.innerHTML='\n        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">\n        <style>\n            .calc-container {\n                user-select: none;\n                display: inline-block;\n                -ms-overflow-style: none;\n                /* Hide scrollbar in IE, Edge */\n                scrollbar-width: none;\n                /* Hide scrollbar in Firefox */\n                width: 350px;\n                margin: 50px;\n                padding: 10px;\n                border-radius: 25px;\n                border: 15px ridge rgb(165, 165, 165);\n                background-image: linear-gradient(0deg, rgb(0, 0, 0), rgb(0, 7, 100));\n                box-shadow: 15px 15px 15px 0px rgba(54, 54, 54, 0.6);\n            }\n\n            /* Hide scrollbar in Chrome and Safari */\n            ::-webkit-scrollbar {\n                display: none;\n                width: 0px;\n            }\n\n            .calc-heading {\n                margin-left: 0px;\n                margin-right: 0px;\n                margin-bottom: -15px;\n                margin-top: -25px;\n                border-radius: 15px;\n                background-image: linear-gradient(45deg, rgba(255, 37, 237, 0.5), rgba(255, 45, 108, 0.5));\n\n            }\n\n            .calc-heading>p {\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                text-align: center;\n                padding: 10px;\n                font-family: Georgia, \'Times New Roman\', Times, serif;\n                font-size: 25px;\n                font-weight: bold;\n                color: rgb(214, 214, 214);\n            }\n\n            .calc-display {\n                color: rgb(235, 235, 235);\n                font-family: Verdana, Geneva, Tahoma, sans-serif;\n                height: 100px;\n                margin: 10px 0px;\n                padding: 1px;\n                border-radius: 15px;\n                background-color: rgb(75, 75, 75);\n            }\n\n            #output {\n                display: flex;\n                justify-content: flex-start;\n            }\n\n            #output > input {\n                display: inline-block;\n                overflow: scroll;\n                border: none;\n                outline: none;\n                line-height: 55px;\n                /* To set caret height */\n                caret-color: rgb(0, 174, 255);\n                margin: 0px 10px;\n                font-size: 32px;\n                font-family: Verdana, Geneva, Tahoma, sans-serif;\n                background-color: rgb(75, 75, 75);\n                color: rgb(235, 235, 235);\n            }\n\n            #error-msg {\n                margin: 0px 10px;\n                overflow: scroll;\n                color: rgb(255, 87, 21);\n                font-size: 21px;\n            }\n\n            .calc-keys {\n                display: flex;\n                flex-flow: row wrap;\n                justify-content: space-between;\n                align-items: flex-end;\n                padding: 0px;\n                margin: 10px;\n            }\n\n            .calc-keys>div {\n                display: flex;\n                justify-content: center;\n                align-items: center;\n                margin: 4px 4px;\n                width: 70px;\n                height: 55px;\n                font-size: 25px;\n                font-family: Verdana, Geneva, Tahoma, sans-serif;\n                border-radius: 50%;\n            }\n\n            .calc-keys>div:hover {\n                cursor: pointer;\n                box-shadow: 4px 4px 15px rgba(173, 173, 173, 0.6);\n            }\n\n            .calc-keys>div:active {\n                cursor: pointer;\n                border-radius: 15px;\n            }\n\n            #equal-key {\n                color: rgb(8, 8, 8);\n                background-color: rgb(200, 255, 252);\n            }\n\n            #equal-key:hover {\n                color: rgb(8, 8, 8);\n                background-color: rgb(228, 255, 254);\n            }\n\n            #reset-key {\n                color: rgb(8, 8, 8);\n                background-color: rgb(153, 226, 153);\n            }\n\n            #reset-key:hover {\n                color: rgb(8, 8, 8);\n                background-color: rgb(184, 255, 184);\n            }\n\n            .blue-keys {\n                color: rgb(8, 8, 8);\n                background-color: rgb(0, 174, 255);\n            }\n\n            .blue-keys:hover {\n                color: rgb(8, 8, 8);\n                background-color: rgb(124, 213, 255);\n            }\n\n            .orange-keys {\n                color: rgb(8, 8, 8);\n                background-color: rgb(196, 127, 0);\n            }\n\n            .orange-keys:hover {\n                color: rgb(8, 8, 8);\n                background-color: rgb(252, 164, 0);\n            }\n\n            .black-keys {\n                color: rgb(235, 235, 235);\n                background-color: rgb(61, 61, 61);\n            }\n\n            .black-keys:hover {\n                color: rgb(235, 235, 235);\n                background-color: rgb(90, 90, 90);\n            }\n\n            .black-keys:active {\n                color: rgb(235, 235, 235);\n                background-color: rgb(100, 100, 100);\n            }\n        </style>\n\n        \x3c!---------------------    My Calculator Container   ---------------------\x3e\n        <div class="calc-container" tabindex="1">\n\n            \x3c!------------------    Heading   ------------------\x3e\n            <div class="calc-heading">\n                <p>My Calculator</p>\n            </div>\n\n            \x3c!------------------    Display   ------------------\x3e\n            <div class="calc-display">\n                <div id="output">\n                    <input type="text" placeholder="Enter input..." tabindex="1.2">\n                </div>\n                <div id="error-msg"></div>\n            </div>\n\n            \x3c!------------------    Keys   ------------------\x3e\n            <div class="calc-keys">\n                \x3c!------------------------    Row 1   ------------------------\x3e\n                <div id="reset-key" title="All Clear (Reset)" tabindex="2">AC</div>\n                <div class="orange-keys" id="inverse-key" title="Inverse (Reciprocal)" tabindex="3">\n                    <img src="./resources/images/x-inverse.png" width="35" height="35">\n                </div>\n                <div class="orange-keys" id="squared-key" title="Squared" tabindex="4">\n                    <img src="./resources/images/x-square.png" width="25" height="25">\n                </div>\n                <div class="orange-keys" id="sqrt-key" title="Square Root" tabindex="5">\n                    <img src="./resources/images/sqrt.png" width="40" height="40">\n                </div>\n\n                \x3c!------------------------    Row 2   ------------------------\x3e\n                <div class="blue-keys" id="parenthesis-key" title="Parenthesis" tabindex="6">\n                    <img src="./resources/images/parenthesis.png" width="30" height="30">\n                </div>\n                <div class="blue-keys" id="factorial-key" title="Factorial ( a! )" tabindex="7">\n                    <img src="./resources/images/factorial.png" width="40" height="40">\n                </div>\n                <div class="blue-keys" id="exponent-key" title="Exponent (x ^ y)" tabindex="8">\n                    <img src="./resources/images/x-power-y.png" width="30" height="30">\n                </div>\n                <div class="blue-keys" id="divide-key" title="Divide (a / b)" tabindex="9">\n                    <img src="./resources/images/divide.png" width="30" height="30">\n                </div>\n\n                \x3c!------------------------    Row 3   ------------------------\x3e\n                <div class="black-keys" id="key-7" tabindex="22">7</div>\n                <div class="black-keys" id="key-8" tabindex="23">8</div>\n                <div class="black-keys" id="key-9" tabindex="24">9</div>\n                <div class="blue-keys" id="multiply-key" title="Multiply (a x b)" tabindex="10">\n                    <img src="./resources/images/multiply.png" width="30" height="30">\n                </div>\n\n                \x3c!------------------------    Row 4   ------------------------\x3e\n                <div class="black-keys" id="key-4" tabindex="19">4</div>\n                <div class="black-keys" id="key-5" tabindex="20">5</div>\n                <div class="black-keys" id="key-6" tabindex="21">6</div>\n                <div class="blue-keys" id="subtract-key" title="Subtract (a - b)" tabindex="11">\n                    <img src="./resources/images/subtract.png" width="25" height="25">\n                </div>\n\n                \x3c!------------------------    Row 5   ------------------------\x3e\n                <div class="black-keys" id="key-1" tabindex="16">1</div>\n                <div class="black-keys" id="key-2" tabindex="17">2</div>\n                <div class="black-keys" id="key-3" tabindex="18">3</div>\n                <div class="blue-keys" id="add-key" title="Add (a + b)" tabindex="12">\n                    <img src="./resources/images/add.png" width="25" height="25">\n                </div>\n\n                \x3c!------------------------    Row 6   ------------------------\x3e\n                <div class="black-keys" id="decimal-point-key" title="Decimal point" tabindex="25">.</div>\n                <div class="black-keys" id="key-0" tabindex="15">0</div>\n                <div class="black-keys" id="backspace-key" title="Backspace" tabindex="14">\n                    <span class="material-icons" style="font-size: 30px;margin-right: 2px">\n                        backspace\n                    </span>\n                </div>\n                <div id="equal-key" title="Equals (Calculate)" tabindex="13">\n                    <img src="./resources/images/equal.png" width="25" height="25">\n                </div>\n\n            </div>\n        </div>\n        ',e.appendChild(t.content.cloneNode(!0)),this.setOnclickForAllKeys(e),this.getOutputElement(e).focus()}connectedCallback(){console.log("'MyCalculator' custom element added to DOM!")}disconnectedCallback(){console.log("'MyCalculator' custom element 'REMOVED' from DOM!")}attributeChangedCallback(e,t,n){console.log(`'${e}' attribute changed from '${t}' to '${n}' !`);const i=this.shadowRoot.querySelector(".calc-container"),r="width"===e||"height"===e||"margin"===e||"calc-name"===e||"calc-input"===e?e:"borderRadius";if("calc-name"===r&&""!==n.trim())i.querySelector(".calc-heading > p").textContent=n;else if("calc-input"===r&&/^[\d\.\+\-\x\/\^\!\(\)]+$/.test(n)){const e=i.querySelector("#output > input");e.textContent=n,e.focus()}else i.style[r]=n}setOnclickForAllKeys(e){const t=e.querySelector("#reset-key"),n=e.querySelector("#inverse-key"),i=e.querySelector("#squared-key"),r=e.querySelector("#sqrt-key"),l=e.querySelector("#parenthesis-key"),a=e.querySelector("#exponent-key"),s=e.querySelector("#factorial-key"),c=e.querySelector("#divide-key"),o=e.querySelector("#multiply-key"),d=e.querySelector("#subtract-key"),p=e.querySelector("#add-key"),u=e.querySelector("#backspace-key"),g=e.querySelector("#equal-key"),h=e.querySelector("#decimal-point-key"),y=e.querySelector("#output > input"),b=e.querySelectorAll(".calc-keys > div");let k,x;y.addEventListener("focus",()=>{const e=this.getCaretPosition(y);y.setSelectionRange(e,e)}),b.forEach(e=>{e.addEventListener("keydown",t=>{" "===t.key&&(e.click(),setTimeout(()=>{u.click(),e.focus()},1))})}),t.addEventListener("click",()=>{this.resetDisplay(e),y.value="",y.focus()}),n.addEventListener("click",()=>{this.calculateResult(e,"**-1"),y.focus()}),i.addEventListener("click",()=>{this.calculateResult(e,"**2"),y.focus()}),r.addEventListener("click",()=>{this.calculateResult(e,"**0.5"),y.focus()}),l.addEventListener("click",()=>{let e=0,t=0;const n=(k=this.getDisplayTextBeforeCaret(y)).charAt(k.length-1);for(const n of k)e+="("===n?1:0,t+=")"===n?1:0;x=e===t?"(":"("===n||")"===n?n:/[\d\.\!]/.test(n)?")":"(",this.insertChar(y,x)}),a.addEventListener("click",()=>{this.resetDisplay(e),k=this.getDisplayTextBeforeCaret(y),x=""===k?"":/[\^\(]$/.test(k)?"":/[\-\+\x\/\.]$/.test(k)?this.replaceOperator(y,"^"):"^",this.insertChar(y,x)}),s.addEventListener("click",()=>{this.resetDisplay(e),k=this.getDisplayTextBeforeCaret(y),x=""===k?"":/[\(]$/.test(k)?"":/[\-\+\x\^\/\.]$/.test(k)?this.replaceOperator(y,"!"):"!",this.insertChar(y,x)}),c.addEventListener("click",()=>{this.resetDisplay(e),k=this.getDisplayTextBeforeCaret(y),x=""===k?"":/[\/\(]$/.test(k)?"":/[\-\+\x\^]$/.test(k)?this.replaceOperator(y,"/"):"/",this.insertChar(y,x)}),o.addEventListener("click",()=>{this.resetDisplay(e),k=this.getDisplayTextBeforeCaret(y),x=""===k?"":/[\x\(]$/.test(k)?"":/[\-\+\/\^]$/.test(k)?this.replaceOperator(y,"x"):"x",this.insertChar(y,x)}),d.addEventListener("click",()=>{this.resetDisplay(e),k=this.getDisplayTextBeforeCaret(y),x=/[\-]$/.test(k)?"":/[\+\.]$/.test(k)?this.replaceOperator(y,"-"):"-",this.insertChar(y,x)}),p.addEventListener("click",()=>{this.resetDisplay(e),k=this.getDisplayTextBeforeCaret(y),x=""===k?"":/[\+\(]$/.test(k)?"":/[\-\.\x\/\^]$/.test(k)?this.replaceOperator(y,"+"):"+",this.insertChar(y,x)}),u.addEventListener("click",()=>{this.resetDisplay(e);let t=this.getCaretPosition(y),n=y.value.split("");n.splice(--t,1),y.value=n.join(""),y.setSelectionRange(t,t),y.focus()}),h.addEventListener("click",()=>{this.resetDisplay(e),k=this.getDisplayTextBeforeCaret(y),x=""===k?"0.":/[\.]|(\d+\.\d+)$/.test(k)?"":".",this.insertChar(y,x)});for(let t=0;t<10;++t){e.querySelector(`#key-${t}`).addEventListener("click",()=>{this.resetDisplay(e),this.insertChar(y,t),y.focus()})}g.addEventListener("click",()=>{this.calculateResult(e,""),this.getOutputElement(e).focus()}),y.addEventListener("keydown",e=>{const n=e.key;y.disabled=!/(\d|Backspace|Delete|Home|End|ArrowLeft|ArrowRight|Tab)/.test(n);const i="("===n||")"===n?l:"!"===n?s:"*"===n?o:"Enter"===n?g:"="===n?g:"."===n?h:"-"===n?d:"+"===n?p:"/"===n?c:"^"===n?a:"Escape"===n?t:null;i&&i.click(),"Tab"!==n&&setTimeout(()=>{y.disabled=!1,y.focus()},10)})}insertChar(e,t){if("replaced"===t)return;if(""===t)return void e.focus();let n=this.getCaretPosition(e),i=e.value.split("");i.splice(n,0,t),e.value=i.join(""),n+=-1===n?2:1,n+="0."===t?1:0,e.setSelectionRange(n,n),e.focus()}getCaretPosition(e){if(e)return e.selectionStart||e.value.length-1}getDisplayTextBeforeCaret(e){const t=this.getCaretPosition(e);return e.value.substring(0,t)}replaceOperator(e,t){const n=this.getCaretPosition(e),i=e.value.split("");return i.splice(n-1,1,t),e.value=i.join(""),e.setSelectionRange(n,n),e.focus(),"replaced"}parseExpression(e){return e.replaceAll("x","*").replaceAll("^","**").replaceAll(".e","e").replaceAll(")(",")*(").replaceAll("0(","0*(").replaceAll("1(","1*(").replaceAll("2(","2*(").replaceAll("3(","3*(").replaceAll("4(","4*(").replaceAll("5(","5*(").replaceAll("6(","6*(").replaceAll("7(","7*(").replaceAll("8(","8*(").replaceAll("9(","9*(").replaceAll(".(","*(").replaceAll("!(","!*(").replaceAll(").",")*").replaceAll(")0",")*0").replaceAll(")1",")*1").replaceAll(")2",")*2").replaceAll(")3",")*3").replaceAll(")4",")*4").replaceAll(")5",")*5").replaceAll(")6",")*6").replaceAll(")7",")*7").replaceAll(")8",")*8").replaceAll(")9",")*9")}calculateResult(e,t){this.resetDisplay(e);let n,i=this.getOutputElement(e),r=i.value;if(""!==r){r=this.parseExpression(r),r+=t;try{if(/^!/.test(r))throw"Invalid Input";for(;/!/.test(r);)r=this.parseFactorialInput(r);if((n=Function("return "+r)())===1/0||n===-1/0)throw"Value too large";if(!0===n||!1===n)throw"Invalid Input";n.toString().length>14&&(n>1e14?n=n.toExponential(8):n>1?n=n.toPrecision(14):n<1&&(n=n.toExponential(8))),n=n.toString().replaceAll("e",".e"),i.value=n}catch(t){const n=this.getErrorMsgElement(e),r="string"==typeof t?t:"Invalid Input";i.style.color="rgb(255, 87, 21)",n.textContent=r}}}parseFactorialInput(e){const t=e.indexOf("!"),n=e.charAt(t+1);let i=t-1,r=e.charAt(i),l=0,a=[];if(!/[\d\)]/.test(r))throw"Invalid Input";if(")"===r){let t="",n=i,s=0,c=1;for(;"("!==r||s!==c;){if(0===n)throw"Invalid Input";t+=e.charAt(n--),")"===(r=e.charAt(n))&&c++,"("===r&&s++}return t=(t+="(").split("").reverse().join(""),t=Function("return "+t)(),l=this.getFactorialOf(t),(a=e.split("")).splice(n,i-n+2,l),a.join("")}let s=0,c=0;for(;/\d/.test(r);)s+=parseInt(e.charAt(i),10)*10**c++,r=e.charAt(--i);if(/[\.]/.test(r))throw"Invalid Input";return l=this.getFactorialOf(s),a=e.split(""),/[\d\.\(]/.test(n)&&(l+="*"),a.splice(i+1,c+1,l),a.join("")}getFactorialOf(e){if(0===e)return 1;if(e<=2)return e;for(let t=e-1;t>=2;--t)if((e*=t)===1/0)throw"Value too large";return e}getOutputElement(e){return e.querySelector("#output > input")}getErrorMsgElement(e){return e.querySelector("#error-msg")}resetDisplay(e){const t=this.getOutputElement(e),n=this.getErrorMsgElement(e),i=n.textContent;"Invalid Input"!==i&&"Value too large"!==i||(t.style.color="rgb(235, 235, 235)",n.textContent="")}});